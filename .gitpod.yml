image: drud/ddev-gitpod-base:20211101_gitpod_experiments

tasks:
  - name: ddev-gitpod-launcher
    init: |
      cd /tmp && ddev config --auto
      ddev debug download-images
      ddev delete -Oy tmp
    command: |
      export DDEV_NONINTERACTIVE=true
      export DDEV_REPO=${DDEV_REPO:-https://github.com/drud/d9simple}
      DDEV_ARTIFACTS=${DDEV_REPO}-artifacts
      git clone ${DDEV_ARTIFACTS} "/tmp/${DDEV_ARTIFACTS##*/}" || true
      reponame=${DDEV_REPO##*/}
      git clone ${DDEV_REPO} ${GITPOD_REPO_ROOT}/${reponame}
      if [ -d ${GITPOD_REPO_ROOT}/${reponame} ]; then
        "$GITPOD_REPO_ROOT"/.gitpod/setup.sh
        cd ${GITPOD_REPO_ROOT}/${reponame}
        # Temporarily use an empty config.yaml to get ddev to use defaults
        # so we can do composer install
        if [ ! -f .ddev/config.yaml ]; then
          mkdir -p .ddev && touch .ddev/config.yaml
        fi
        # If there's a composer.json, do composer install
        if [ -f composer.json ]; then
          ddev composer install
        fi
        # Now that composer install has been done, if we were using an empty
        # .ddev/config.yaml, we'll do a real ddev config
        if [ ! -s .ddev/config.yaml ]; then
          ddev config --auto
        fi
        # This won't be required in ddev v1.18.2+
        printf "host_webserver_port: 8080\nhost_https_port: 2222\nhost_db_port: 3306\nhost_mailhog_port: 8025\nhost_phpmyadmin_port: 8036\nbind_all_interfaces: true\n" >.ddev/config.gitpod.yaml
        ddev stop -a
        ddev start -y
        if [ -d "/tmp/${DDEV_ARTIFACTS##*/}" ]; then
          if [ -f /tmp/${DDEV_ARTIFACTS##*/}/db.sql.gz ]; then
            ddev import-db --src=/tmp/${DDEV_ARTIFACTS##*/}/db.sql.gz
          else
            echo "No db.sql.gz was provided in /tmp/${DDEV_ARTIFACTS##*/}"
          fi
          if [ -f ${DDEV_ARTIFACTS##*/}; then
            ddev import-files --src=/tmp/${DDEV_ARTIFACTS##*/}/files.tgz
          else
            echo "No files.tgz was provided in /tmp/${DDEV_ARTIFACTS##*/}"
          fi
        fi
        gp await-port 8080 && sleep 1 && gp preview $(gp url 8080)
      else
        echo "Failed to clone ${DDEV_REPO}, not starting project"
      fi

vscode:
  extensions:
    # PHP extension
    - felixfbecker.php-debug

    # Bash extensions
    - timonwong.shellcheck
    - rogalmic.bash-debug

github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    main: true
    # enable for all branches in this repo (defaults to false)
    branches: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: false
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: true
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: true

ports:
  # Ignore direct-build https port
  - port: 2222
    onOpen: ignore
  - port: 3306
    onOpen: ignore
  # Used by projector
  - port: 6942
    onOpen: ignore
  # Direct-connect ddev-webserver port that is the main port
  - port: 8080
    onOpen: ignore
  # Currently un-notified and unsupported mailhog http port
  - port: 8025
    onOpen: ignore
  # Currently un-notified and unsupported mailhog https port
  - port: 8026
    onOpen: ignore
  # Currently un-notified and unsupported phpmyadmin http port
  - port: 8036
    onOpen: ignore
  # Currently un-notified and unsupported phpmyadmin https port
  - port: 8037
    onOpen: ignore
  # router http port that we're ignoring.
  - port: 8888
    onOpen: ignore
  # router https port that we're ignoring.
  - port: 8889
    onOpen: ignore
  # xdebug port
  - port: 9000
    onOpen: ignore
  # projector port
  - port: 9999
